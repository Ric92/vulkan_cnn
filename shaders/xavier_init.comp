#version 450

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430, binding=0) buffer inI { float layer_input[]; };
layout(std430, binding=1) buffer inW { float weight[]; };
layout(std430, binding=2) buffer inB { float bias[]; };
layout(std430, binding=3) buffer outO { float layer_output[]; };

layout(push_constant) uniform dim {
    uint batch_szie;
    uint inp_dim;
    uint out_dim;
};

void main(){
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    if(x >= inp_dim || y >= out_dim)return;

    //weight[x*out_dim + y] = // TODO;
    if(x == 0){
        bias[y] = 0.0;
    }
}