#version 450

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding=0) buffer inI { float layer_input[]; };
layout(std430, binding=1) buffer outO { float layer_output[]; };

layout(push_constant) uniform dim {
    uint batch_size;
    uint inp_dim;
};

void main(){
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    if(x >= batch_size)return;

    float exp_sum = 0;

    for(uint i=0;i<inp_dim;i++){
        exp_sum += exp(layer_input[x*inp_dim + i]);
    }

    for(uint i=0;i<inp_dim;i++){
        layer_output[x*inp_dim + i] = exp(layer_input[x*inp_dim + i]) / exp_sum;
    }
}